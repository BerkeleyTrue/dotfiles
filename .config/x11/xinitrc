#!/bin/sh

sysresources=/etc/X11/xinit/.Xresources
sysmodmap=/etc/X11/xinit/.Xmodmap

X11_HOME=$XDG_CONFIG_HOME/x11
userresources=$X11_HOME/xresources
usermodmap=$X11_HOME/xmodmap
xprofile=$X11_HOME/xprofile

__log() {
    echo "$(date +%H:%M:%S) xinit: $*"
}

# Load system defaults
if [ -f $sysresources ]; then
    xrdb -merge $sysresources
fi

if [ -f $sysmodmap ]; then
    xmodmap $sysmodmap
fi

if [ -f "$userresources" ]; then
	xrdb -merge "$userresources"
fi

if [ -f "$usermodmap" ]; then
	xmodmap "$usermodmap"
fi

# source xprofile. This is done natively with some WM's but not xmonad
if [ -f "$xprofile" ]; then 
  source "$xprofile"
fi

# Source programs in xinitrc.d (compatibility)
if [ -d /etc/X11/xinit/xinitrc.d ]; then
    for f in /etc/X11/xinit/xinitrc.d/?*.sh; do
        [ -x "$f" ] && . "$f"
    done
    unset f
fi

systemctl --user import-environment DISPLAY
systemctl --user import-environment XAUTHORITY

__log "starting session target"

if ! systemctl --user start x11-session.target; then
    __log "ERROR: Failed to start"
    exit 1
fi

__log "waiting for xmonad"
timeout 30 bash -c 'while ! systemctl --user is-active xmonad.service >/dev/null 2>&1; do sleep 0.5; done' || {
    __log "ERROR: xmonad failed to start"
    exit 1
}

# Monitor the session - exit when XMonad stops
__log "session started, monitoring.."
while systemctl --user is-active xmonad.service >/dev/null 2>&1; do
    sleep 2
done

__log "goodbye, beautiful"
