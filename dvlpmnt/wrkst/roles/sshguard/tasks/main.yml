---
- name: SSHGuard - Brute force detector for SSH, Exim, VSFTPD and more. Blocks by
    ip with iptables
  tags:
    - sshguard
  block:
    - name: Install sshguard package
      package:
        name: sshguard
        state: present

    - name: Register sshd port setting in ssd_config
      shell: grep -E '^Port ' /etc/ssh/sshd_config || echo 'Port 22'
      register: sshguard_ssh_port_tmp
      changed_when: false
      failed_when: false

    - name: Register sshd port fact
      set_fact:
        sshguard_ssh_port: '{{ sshguard_ssh_port_tmp.stdout.split()[1] | trim }}'
      tags:
        - sshguard

    - name: Add WHITELIST option to sshguard.conf
      become: true
      become_user: root
      lineinfile:
        dest: /etc/sshguard.conf
        regexp: ^WHITELIST_FILE=
        line: WHITELIST_FILE={{ sshguard_whitelist_file }}
        state: present
      notify:
        - restart sshguard

    - name: Ensure sshguard whitelist directory
      become: true
      become_user: root
      file:
        path: '{{ sshguard_whitelist_directory }}'
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Copy sshguard.service file
      become: true
      become_user: root
      copy:
        src: sshguard.archlinux.service
        dest: /etc/systemd/system/sshguard.service
        mode: '0644'
        owner: root
        group: root

    - name: Update UFW before.rules
      become: true
      become_user: root
      blockinfile:
        path: /etc/ufw/before.rules
        marker: '# {mark} ANSIBLE MANAGED BLOCK'
        insertafter: ^-A ufw-before-output -o lo -j ACCEPT
        # hand off control for sshd to sshguard
        block: |
          :sshguard - [0:0]
          -A ufw-before-input -p tcp --dport {{ sshguard_ssh_port }} -j sshguard
      notify:
        - reload ufw

    - name: Update sshguard whitelist file
      become: true
      become_user: root
      lineinfile:
        dest: '{{ sshguard_whitelist_file }}'
        regexp: ^{{ whitelist_entry }}
        line: '{{ whitelist_entry }}'
        create: true
        mode: 0755
        state: present
      loop: '{{ sshguard_whitelist }}'
      loop_control:
        loop_var: whitelist_entry
      notify:
        - restart sshguard
