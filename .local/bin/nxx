#!/bin/bash

set -e

commandName=$(basename $0)
flake_uri=$HOME/.config/home-manager
hostname=$(uname -n)
username=$(whoami)
profile=$username@$hostname
home_uri=$flake_uri\#homeConfigurations."$profile"

__path_info() {
	echo "$(nix path-info $1)"
}

__get_home_manager() {
	echo "$(__path_info $home_uri.activationPackage)/home-path/bin/home-manager"
}

# get path to a package
path() {
	echo "$(nix path-info $home_uri.pkgs.$1)"
}

build() {
	# --show-trace show stack trace
	# --no-link don't link the result to the directory
	# --print-build-logs print build logs
	# then output the flake structure
	nix build \
		--show-trace \
		--no-link \
		--print-build-logs \
		$home_uri.activationPackage &&
		nix flake show $flake_uri &&
		__path_info $home_uri.activationPackage
}

switch() {
	eval "$(__get_home_manager) switch"
}

update() {
	nix flake update --flake $flake_uri
}

rollback() {
	local sel=$("$(__get_home_manager)" generations |
		fzf --prompt "Select a generation to rollback to: ")

	if [[ -z $sel ]]; then
		echo "No generation selected"
		exit 1
	fi

	local res=$(echo $sel | awk '{print $5 "|" $NF}')

	local generationId=$(echo $res | cut -d '|' -f 1)
	local path=$(echo $res | cut -d '|' -f 2)

	echo "Rolling back to generation $generationId ($path)"
	# ask for confirmation
	read -p "Are you sure? " -n 1 -r
	echo

	if [[ ! $REPLY =~ ^[Yy]$ ]]; then
		exit 1
	fi

	# echo "Path: $path"

	$path/activate
}

case $1 in
build)
	build
	;;
switch)
	switch
	;;
update)
	update
	;;
path)
	path $2
	;;
rollback)
	rollback
	;;
*)
	echo "Usage: $commandName {update|build|switch|path|rollback}"
	exit 1
	;;
esac
