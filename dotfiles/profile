# Add vi mappings to bash
set -o vi

export PATH=/usr/local/bin:$PATH

# Point to java 7
export JAVA_HOME="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home"

# Adds mongoDB binaries to path
export PATH=$PATH:~/mongodb/bin

# Add RVM to PATH for scripting
export PATH=$PATH:$HOME/.rvm/bin

#Go lang
export GOROOT=/usr/local/go
export GOPATH=$HOME/go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin

#Heroku Toolbelt
export PATH=$PATH:/usr/local/heroku/bin

#PostgressApp commands
export PATH=$PATH:/Applications/Postgres.app/Contents/Versions/9.3/bin

# Make neovim the default editor
export EDITOR=nvim
export VISUAL=$EDITOR

# Add lang settings for fonts to work properly
export LANG=en_US.UTF-8
export LC_COLLATE=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export LC_MESSAGES=en_US.UTF-8
export LC_MONETARY=en_US.UTF-8
export LC_NUMERIC=en_US.UTF-8
export LC_TIME=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Bash helper alias
## Starts MongoDB server
alias ..='cd ..'
alias ll='ls -aFlh'
alias v='nvim'
alias vi='nvim'
alias vim='nvim'
alias tmux="TERM=screen-256color-bce tmux -2"
## Will make parent directories if they don't exist
## Also verbose
alias mkdir="mkdir -pv"
alias whatismyip="curl http://ipecho.net/plain; echo"
## Make file executable
alias chmodx='chmod 755'
## Make file read/write-able
alias chmodrw='chmod 644'
## print bash function declaration in console
## Used to make sure profile changes are reflecting
alias echodec='declare -f'

#quick edits
alias vprofile='nvim ~/.profile'
alias sprofile='source ~/.profile'
alias vvimrc='nvim ~/.vimrc'
alias vneo='nvim ~/.config/nvim/init.vim'
alias vlint='nvim ~/.eslintrc'
alias vhyper='nvim ~/.hyper.js'

#node aliases
alias :mongo='mongod --dbpath ~/data/db'
alias npmig='sudo npm install -g'
alias npmug='sudo npm uninstall -g'
alias npmid='npm install --save-dev'
alias npmis='npm install --save'
alias npms='npm run start'
alias npmt='npm run test'
alias npml='npm run lint'

#quickmoves
alias cdnode='cd ~/node'
alias cdf='cd ~/node/freecodecamp/actual'
alias cdrt='cd ~/node/react'
alias cdrdx='cd ~/node/redux'
alias cdrwr='cd ~/node/rwr'
alias cdvim='cd ~/.vim'

#git aliases
alias gstat='git status'
alias gfetch='git fetch'
alias gpush='git push'
alias gpushntrack='git push -u'
alias grebase='git rebase'
alias gadd='git add'
alias gdiff='git diff'
alias gcom='git commit'
alias gamend='git commit --amend'
alias glog='git log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate'
alias glognum='git log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat'
alias gco='git co'
alias gtagls='git describe --tags --abbrev=0'
alias gtag='git tag -s'
alias grst='git reset'
alias grst1='git reset HEAD^'
alias grst2='git reset HEAD^^'
alias grsth='git reset --hard'
alias grsth1='git reset --hard HEAD^'
alias grsth2='git reset --hard HEAD^^'
alias grsts='git reset --soft'
alias grsts1='git reset --soft HEAD^'
alias grsts2='git reset --soft HEAD^^'
alias gstash='git stash'
alias gstashls='git stash list'
alias grename='git mv --force'
gbranch() {
  # if given command `gbranch`
  # list out branches
  if [ $# = 0 ]; then
    echo 'printing branches'
    git branch
    return 0
  fi
  echo "creating branch '$1'"
  # given the command `gbranch berks-is-awesome`
  # creates a new branch `berks-is-awesome`
  # checks that branch out
  git co -b $1
  echo "creating '${2:-origin}/$1'"
  # this will make the current branch track origin/berks-is-awesome
  git push -u ${2:-origin} $1
}
gclone() {
  # Will clone a repo into a new dir as the second arg
  git clone $1 $2
  # and it will cd into the newly created repo dir
  cd ${2:-$(basename $1 .git)}
}
gpull() {
  # If given gpull upstream
  # find the current branch and pull that branch
  # from the `upstream` remote repository
  if [ $# = 1 ]; then
    currentbranch=$(git rev-parse --abbrev-ref HEAD)
    echo "current branch is $currentbranch"
    echo "pulling down branch '$currentbranch' from remote repository '$1'"
    git pull $1 $currentbranch
    return 0
  fi
  # Otherwise pull from the repository this branch is tracking
  git pull
}

#Makes and CD's to a new directoy.
function mkncd() {
  mkdir -pv $1
  cd $_
}

# Node exports
# increases number of cores node-gyp uses when building
export JOBS=max

#bash completion
if [ -f /opt/local/etc/profile.d/bash_completion.sh ]; then
    .  /opt/local/etc/profile.d/bash_completion.sh
fi

# Fix <C-h> issue with neovim
# Not sure if this is sage to run more than once
# infocmp $TERM | sed 's/kbs=^[hH]/kbs=\\177/' > $TERM.ti && tic $TERM.ti
